# If not running interactively, don't do anything
[[ $- != *i* ]] && return

aliases=(
  l
  ll
  la
  lt
  lr
  rr
  virtualenv
  emacs
  emd
  emc
  less
  ..
  ...
  grepp
)

for a in "${aliases[@]}"
do
  unalias "$a" 2>/dev/null
done

unset l
l() {
  case "$#" in
    0)
      ls --color -l | \
        awk '
          NR > 1 {
            printf("%s ", $1)
            for(i = 9; i <= NF; i++) {
              if(i == NF) {
                print $i
              } else {
                printf("%s ", $i)
              }
            }
          }
        '
      ;;
    1)
      ls --color -l "$1" | \
        awk '
          NR > 1 {
            printf("%s ", $1)
            for(i = 9; i <= NF; i++) {
              if(i == NF) {
                print $i
              } else {
                printf("%s ", $i)
              }
            }
          }
        '
      ;;
    *)
      declare arg
      for arg in "$@"
      do
        echo "-> ${arg}"
        ls --color -l "$arg" | \
          awk '
            NR > 1 {
              printf(" %s ", $1)
              for(i = 9; i <= NF; i++) {
                if(i == NF) {
                  print $i
                } else {
                  printf("%s ", $i)
                }
              }
            }
            END { printf("\n") }
          '
      done
      ;;
  esac
}
export -f l
alias ll='ls --color -l'
alias la='ls --color -la'
alias lt='ls --color -lth'
alias lr='ls --color -lrh'

alias rr='rm -rf'

unset rpmx
rpmx() {
  [[ "$1" =~ ^.*\.rpm$ ]] ||
    exit 1
  local rpm_dir="${1}.d"
  mkdir "$rpm_dir"
  cd "$rpm_dir"
  rpm2cpio "../${1}" | cpio -idv
}
export -f rpmx

rpmq() {
  test -n "$1" &&
    rpm -qa | grep "$1"
}
export -f rpmq

# use virtualenv of python2 when on archlinux
which virtualenv2 >/dev/null 2>&1 && alias virtualenv='virtualenv2'

alias emacs='emacs --no-window-system'
alias emd='emacs --daemon'
alias emc='emacsclient -nw'

nx() {
  case "$1" in
    -s)
      nix-env -qaP ".*${2}.*"
      ;;
  esac
}
export -f nx

start_ssh-agent() {
  (ssh-add -l > /dev/null 2>&1) ||
    {
      test -S "/tmp/.ssh-agent.${USER}.sock" ||
        eval $(ssh-agent -a "/tmp/.ssh-agent.${USER}.sock" -s)

      ssh-add -l > /dev/null 2>&1
      test $? -eq 2 &&
        export SSH_AUTH_SOCK="/tmp/.ssh-agent.${USER}.sock"

      ssh-add -l > /dev/null 2>&1
      test $? -eq 1 &&
        ssh-add
    }
}

ldw() {
  test -z "$1" &&
    exit 1
  ldd $(which "$1")
}
export -f ldw

dus() {
  path="$1"
  test $(echo "$path" | rev | cut -c 1) = / ||
    path="${path}/"
  du -sh "${path}"* | sort -h
}
export -f dus

alias less='less --RAW-CONTROL-CHARS'
alias ..='cd ..'
alias ...='cd ../..'
alias grepp='grep --color=auto --perl-regexp'

start_ssh-agent

PS1='\h \W> '

# replace the bash process with fish if available
#$(which fish > /dev/null 2>&1) && exec fish
