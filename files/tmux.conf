set-option -g prefix C-SPACE
unbind-key C-b
bind-key C-SPACE send-prefix

set-window-option -g allow-rename off

if-shell "(tmux -V | grep --quiet '^tmux 1.*$')" \
  "set-option -g mouse-resize-pane on; set-option -g mouse-select-pane off; set-option -g mouse-select-window off"

if-shell "(tmux -V | grep --quiet '^tmux 2.*$')" "set-option -g mouse on"

# capital letters can be used for referring the shift key
# e.g. M-H actually becomes `alt` +  `shift` + `h`
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

bind-key -n M-i split-window -h
bind-key -n M-o split-window -v

bind-key -n M-Left previous-window
bind-key -n M-Right next-window
bind-key -n M-m new-window

set-window-option -g mode-keys vi

bind-key -n M-e copy-mode

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy C-v rectangle-toggle

# bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"
# bind-key -n M-y run-shell "tmux set-buffer $(xclip -out -selection clipboard); tmux paste-buffer"
bind-key -t vi-copy y copy-pipe "rmc --send"
bind-key -n M-y run-shell "tmux set-buffer $(rmc --read); tmux paste-buffer"

# prevent tmux from capturing keys pressed after `esc`
# otherwise this behaviour will conflict with
# e.g. vim when moving the cursor after switching from insert to normal mode
set-option -s escape-time 0

setenv -g SSH_AUTH_SOCK $SSH_AUTH_SOCK
