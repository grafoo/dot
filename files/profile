append_export_if_exists ()
{
  local variable="$1"
  local path="$2"
  test -d "$path" &&
    {
      content=$(printenv $variable)
      if test -n "$content"; then
        local part
        local found=false

        for part in $(echo "$content" | awk 'BEGIN{RS=":"} {print}'); do
          test "$part" = "$path" && found=true
        done

        if ! "$found"; then
          export $variable="${content}:${path}"
        fi
      else
        export $variable="$path"
      fi
    }
}


for editor in emacsclient mg vim vi; do
  (which "$editor" >/dev/null 2>&1) &&
    {
      if test "$editor" = emacsclient; then
        if test -n "$DISPLAY"; then
          export EDITOR=emacsclient
        else
          export EDITOR="emacsclient -t"
        fi
        break
      fi

      export EDITOR="$editor"
      break
    }
done


(which less >/dev/null 2>&1) &&
  unset PAGER &&
  export PAGER=less


# go
test -d "${HOME}/sdk/go" &&
  export GOROOT="${HOME}/sdk/go" &&
  export PATH="${GOROOT}/bin:${PATH}" &&
  export GOPATH="$HOME"


# rust
append_export_if_exists PATH "${HOME}/.cargo/bin"


# java
test -d "${HOME}/sdk/jdk" &&
  export JAVA_HOME="${HOME}/sdk/jdk" &&
  export PATH="${JAVA_HOME}/bin:${PATH}"


# OCaml OPAM configuration
test -f "${HOME}/.opam/opam-init/init.sh" &&
    {
        . "${HOME}/.opam/opam-init/init.sh" >/dev/null 2>&1 || true
    }


# bin dirs
append_export_if_exists PATH "${HOME}/bin"
append_export_if_exists PATH "${HOME}/.local/bin"


# language
# see /usr/share/locale/locale.alias for options
test "$LANG" = "en_US.UTF-8" ||
  export LANG="en_US.UTF-8"


# dot files
test -d "${HOME}/dot" &&
  export DOT_FILES_DIR="${HOME}/dot"


# virtualenvwrapper
test -d "${HOME}/.virtualenvs" &&
  export WORKON_HOME="${HOME}/.virtualenvs"
test -d "${HOME}/src" &&
  export PROJECT_HOME="${HOME}/src"


# guix

# install glibc-utf8-locales package
append_export_if_exists GUIX_LOCPATH "${HOME}/.guix-profile/lib/locale"

append_export_if_exists PATH "${HOME}/.guix-profile/bin"
append_export_if_exists PATH "${HOME}/.guix-profile/sbin"
append_export_if_exists JUPYTER_PATH "${HOME}/.guix-profile/share/jupyter"
append_export_if_exists GUIX_GTK3_PATH "${HOME}/.guix-profile/lib/gtk-3.0"
append_export_if_exists PYTHONPATH "${HOME}/.guix-profile/lib/python3.6/site-packages"
append_export_if_exists GI_TYPELIB_PATH "${HOME}/.guix-profile/lib/girepository-1.0"
append_export_if_exists XDG_DATA_DIRS "${HOME}/.guix-profile/share"
append_export_if_exists GIO_EXTRA_MODULES "${HOME}/.guix-profile/lib/gio/modules"
append_export_if_exists PATH "${HOME}/.config/guix/current/bin"
append_export_if_exists INFOPATH "${HOME}/.guix-profile/share/info"

# X.509
# install nss-certs package
append_export_if_exists SSL_CERT_DIR "${HOME}/.guix-profile/etc/ssl/certs"
append_export_if_exists SSL_CERT_FILE="${HOME}/.guix-profile/etc/ssl/certs/ca-certificates.crt"
append_export_if_exists CURL_CA_BUNDLE="$SSL_CERT_FILE"
append_export_if_exists GIT_SSL_CAINFO="$SSL_CERT_FILE"

# git
append_export_if_exists GIT_EXEC_PATH "${HOME}/.guix-profile/libexec/git-core"

# list fonts with `xlsfonts`
# query current user preferences of X (e.g. 'Font Path') with `xset q`
guix_fonts_dir="${HOME}/.guix-profile/share/fonts/truetype/fonts.dir"
readlink -e "$guix_fonts_dir" &&
  xset +fp $(dirname $(readlink -f "$guix_fonts_dir"))
